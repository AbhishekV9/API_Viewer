{"version":3,"sources":["Actions/actionTypes.js","Actions/index.js","Components/Header.js","Components/Data.js","Components/Response.js","Components/App.js","Reducer/index.js","index.js"],"names":["CHANGE_METHOD","POST_BODY","EMPTY_BODY","SAVE_RESPONSE","emptyBody","type","saveResponse","response","connectedComponent","connect","state","postState","props","dispatch","useDispatch","useState","method","setmethod","url","seturl","handleClick","value","handleformDisplay","changeMethod","handleSend","str","RegExp","test","fetch","body","JSON","stringify","headers","then","res","json","data","handleSuccess","catch","err","console","log","alert","className","DropdownButton","id","title","Dropdown","Item","onClick","InputGroup","FormControl","placeholder","onChange","e","target","Button","variant","Data","active","setActive","keys","setkeys","values","setValues","handleAdd","key","Navbar","bg","activekey","onSelect","selectedKey","Container","Brand","eventKey","Nav","Link","disabled","style","fontSize","showBody","Text","name","width","Response","JSONPrettyMon","require","useSelector","success","length","marginLeft","message","theme","App","showbody","setshowbody","setsuccess","initialState","store","createStore","action","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff747954.chunk.js","sourcesContent":["export const CHANGE_METHOD=\"CHANGE_METHOD\";\r\nexport const POST_BODY=\"POST_BODY\";\r\nexport const EMPTY_BODY=\"EMPTY_BODY\";\r\nexport const SAVE_RESPONSE=\"SAVE_RESPONSE\";\r\n","import { CHANGE_METHOD,\r\n     EMPTY_BODY,\r\n      POST_BODY,\r\n      SAVE_RESPONSE\r\n     } from \"./actionTypes\";\r\n\r\n\r\nexport function changeMethod(method){\r\n    return{\r\n        type:CHANGE_METHOD,\r\n        method\r\n    }\r\n}\r\n\r\nexport function addPostBody(key,value){\r\n    return{\r\n        type:POST_BODY,\r\n        key,\r\n        value\r\n    }\r\n}\r\n\r\nexport function emptyBody(){\r\n    return{\r\n        type:EMPTY_BODY\r\n    }\r\n}\r\n\r\nexport function saveResponse(response){\r\n    return{\r\n        type:SAVE_RESPONSE,\r\n        response\r\n    }\r\n}\r\n","import React,{useState} from 'react';\r\nimport { DropdownButton, Dropdown, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { changeMethod,emptyBody, saveResponse} from \"../Actions\";\r\nimport { useDispatch,connect } from 'react-redux'\r\n\r\nconst Header = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [method, setmethod] = useState(\"GET\");\r\n    const [url, seturl] = useState(\"\")\r\n\r\n    function isValidURL(str) {\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n      return !!pattern.test(str);\r\n      };\r\n    \r\n    const handleClick=(method,value)=>{\r\n        setmethod(method);\r\n        dispatch(emptyBody())\r\n        props.handleformDisplay(value);\r\n        dispatch(changeMethod(method));\r\n    }\r\n\r\n    const handleSend=()=>{\r\n        if(url===\"\"){\r\n            alert(\"please Enter a Valid url\")\r\n            return\r\n        }\r\n        const isValid=isValidURL(url);\r\n        if(isValid){\r\n            dispatch(emptyBody())\r\n            if(method!==\"GET\"){\r\n                    fetch(url,{\r\n                        method:method,\r\n                        body: JSON.stringify(\r\n                            props.postState\r\n                        ),\r\n                        headers:{ 'Content-Type': 'application/json' },\r\n                    })\r\n                    .then(res=>res.json())\r\n                    .then(data=>{\r\n                      dispatch(saveResponse(data)); \r\n                      props.handleSuccess(\"Success\") ;\r\n                    })\r\n                    .catch((err)=>{\r\n                        console.log(err);\r\n                        dispatch(saveResponse(err));\r\n                        props.handleSuccess(\"Error\") ;\r\n                    })\r\n                    return;  \r\n            }\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                dispatch(saveResponse(data))\r\n                props.handleSuccess(\"Success\") ;\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n                dispatch(saveResponse(err))\r\n                props.handleSuccess(\"Error\") \r\n                console.log(\"hi\")\r\n            })\r\n        }else{\r\n            alert(\"Please Enter a valid url\")\r\n\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <>\r\n        <div className=\"header\">\r\n            <DropdownButton id=\"dropdown-basic-button\" className=\"drop\" title={method}>\r\n                <Dropdown.Item onClick={()=>handleClick('GET',false)}>GET</Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>handleClick('POST',true)}>POST</Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>handleClick('PUT',true)}>PUT</Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>handleClick('PATCH',true)}>PATCH</Dropdown.Item>\r\n                <Dropdown.Item onClick={()=>handleClick('DELETE',true)}>DELETE</Dropdown.Item>\r\n            </DropdownButton>\r\n            <InputGroup className=\"mb-3 w-9 \" >\r\n                <FormControl\r\n                placeholder=\"https://example.com\"\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                value={url}\r\n                onChange={(e)=>seturl(e.target.value)}\r\n                />\r\n                <Button variant=\"primary\" id=\"button-addon2\" onClick={()=>handleSend()}>\r\n                SEND&nbsp;&nbsp;\r\n                </Button>\r\n            </InputGroup>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStatetoprops(state){\r\n    return{\r\n      postState:state.postState\r\n    }\r\n  }\r\n  \r\n\r\n  const connectedComponent=connect(mapStatetoprops)(Header);\r\n  \r\n  export default connectedComponent;","import React, { useState } from 'react';\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addPostBody } from '../Actions';\r\n\r\nfunction Data(props) {\r\n  const dispatch = useDispatch();\r\n  const [active, setActive] = useState('default');\r\n  const [keys, setkeys] = useState('');\r\n  const [values, setValues] = useState('');\r\n\r\n  const handleAdd = () => {\r\n    dispatch(addPostBody(keys, values));\r\n    setkeys('');\r\n    setValues('');\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        bg=\"light\"\r\n        variant=\"light\"\r\n        activekey={active}\r\n        onSelect={(selectedKey) => setActive(selectedKey)}\r\n      >\r\n        <Container>\r\n          <Navbar.Brand eventKey=\"link-2\">Body</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link eventKey=\"disabled\" disabled>\r\n              Params\r\n            </Nav.Link>\r\n            <Nav.Link eventKey=\"disabled\" disabled>\r\n              Headers\r\n            </Nav.Link>\r\n            <Nav.Link eventKey=\"disabled\" disabled>\r\n              Authorization\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      <span>\r\n        <p className=\"s-1\">Content Type &nbsp;&nbsp;&nbsp; application/json</p>\r\n        <p className=\"s-1\" style={{ fontSize: '20px' }}>\r\n          Body\r\n        </p>\r\n      </span>\r\n      <div className=\"bg\">\r\n        {props.showBody && (\r\n          <>\r\n            {' '}\r\n            <p className=\"des\">\r\n              You can add key value pair in Body by clicking Add button and you\r\n              can Add Multiple key value pairs\r\n            </p>\r\n            <div className=\"d-flex\">\r\n              <div className=\"w-8\">\r\n                <InputGroup className=\"mb-1\">\r\n                  <InputGroup.Text className=\"m-20\">Key</InputGroup.Text>\r\n                  <FormControl\r\n                    aria-label=\"First name\"\r\n                    className=\"m-20\"\r\n                    name=\"key\"\r\n                    value={keys}\r\n                    onChange={(e) => setkeys(e.target.value)}\r\n                  />\r\n                  <InputGroup.Text className=\"m-20\">Value</InputGroup.Text>\r\n                  <FormControl\r\n                    aria-label=\"Last name\"\r\n                    className=\"m-20\"\r\n                    name=\"value\"\r\n                    value={values}\r\n                    onChange={(e) => setValues(e.target.value)}\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <div style={{ width: ' 20%' }}>\r\n                <Button\r\n                  onClick={() => handleAdd()}\r\n                  variant=\"dark\"\r\n                   className=\"mt-1\"\r\n                >\r\n                 &nbsp; &nbsp;Add&nbsp;&nbsp;\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n","import React from 'react';\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport JSONPretty from 'react-json-pretty';\r\nexport const Response = (props) => {\r\n    var JSONPrettyMon = require('react-json-pretty/dist/monikai');\r\n  const response = useSelector((state) => state.response);\r\n  console.log(response)\r\n  return (\r\n    <div>\r\n      <div style={{ fontSize: '20px' }}>\r\n        <span>Status:&nbsp;&nbsp;{props.success.length > 0 && props.success===\"Success\"? <span className=\"Green\">{props.success}</span>:<span className=\"Red\">{props.success}</span>}</span>\r\n        <span style={{ marginLeft: '100px' }}>Time:</span>\r\n      </div>\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand>JSON</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link eventKey=\"link-1\">RAW</Nav.Link>\r\n            <Nav.Link eventKey=\"link-1\">HEADERS</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      <div className=\"Response\">\r\n        <JSONPretty id=\"json-pretty\" data={props.success===\"Success\" ? response:response.message } theme={JSONPrettyMon}></JSONPretty>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import  Header  from \"./Header\";\nimport Data from \"./Data\";\nimport { Response } from \"./Response\";\nimport { useState } from \"react\";\nimport 'react-json-pretty/themes/monikai.css';\n\nfunction App() {\n\n  const [showbody, setshowbody] = useState(false);\n  const [success, setsuccess] = useState(\"\");\n\n  const handleformDisplay=(value)=>{\n    setshowbody(value);\n  }\n\n  const handleSuccess=(value)=>{\n    setsuccess(value)\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header handleformDisplay={handleformDisplay}  handleSuccess={handleSuccess}/>\n      <Data showBody={showbody}/>\n      <Response success={success}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { CHANGE_METHOD, EMPTY_BODY, POST_BODY, SAVE_RESPONSE } from \"../Actions/actionTypes\"\r\n\r\nconst initialState={\r\n    method:'GET',\r\n    postState:{\r\n\r\n    },\r\n    response:{\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default function rootReducer(state=initialState,action){\r\n \r\n    switch(action.type){\r\n        case CHANGE_METHOD:{\r\n            return{\r\n                ...state,\r\n                method:action.method\r\n            }\r\n        }\r\n        case POST_BODY:{\r\n            return{\r\n                ...state,\r\n                postState:{...state.postState,[action.key]:action.value}\r\n            }\r\n        }\r\n        case EMPTY_BODY:{\r\n            return{\r\n                ...state,\r\n                postState:{}\r\n            }\r\n\r\n        }\r\n        case SAVE_RESPONSE:{\r\n            return{\r\n                ...state,\r\n                response:action.response\r\n            }\r\n        }       \r\n        default:return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\n\nimport './Styles/index.css';\nimport App from './Components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport rootReducer from './Reducer';\n\nconst store=createStore(rootReducer,applyMiddleware(thunk,logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}